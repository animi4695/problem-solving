#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

string findLongestRegex(string x, string y, string z) {
    string ALL = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int n = (int)x.size();
    // find rightmost position i where z[i] != x[i] and z[i] != y[i]
    int excludePos = -1;
    for(int i = n-1; i >= 0; i--) {
        if(z[i] != x[i] && z[i] != y[i]){
            excludePos = i;
            break;
        }
    }

    // if excludePos is not found. return -1;
    if(excludePos == -1)
        return "-1";

    string ans = "";
    for(int k = 0; k < n; k++){
        if(k == excludePos) {
            // skip z[k] and add regex to ans.
            ans += "[";
            for(auto ch : ALL){
                if(ch != z[k])
                    ans += ch;
            }
            ans += "]";
        }
        else
            ans += "[" + ALL + "]";
    }

    return ans;
}

int main() {
    string x = "AB", y = "BD", z = "CD";

    cout<<findLongestRegex(x, y, z);
}



// A team of financial analysts at Amazon closely monitors revenue generated by a newly launched product. They classify a period of one or more consecutive days as a stable-growth period if the revenue generated by the product takes no more than k distinct values over that period.

// Given an array revenues of size n, that represents the revenues generated by the new product on n consecutive days, and an integer k, determine the total number of stable growth periods over the n days. Since the answer can be large, return it modulo (10^9 + 7).

// Function Description

// Complete the function getStablePeriodsCount in the editor.

// getStablePeriodsCount has the following parameters:

// int revenues[n]: the revenues generated by the new product over n days
// int k: the maximum number of distinct values in a stable growth period
// Returns

// int: the number of stable growth periods of the product over n days, modulo (10^9 + 7)

// Example 1:

// Input:  revenues = [1, 2, 1], k = 1
// Output: 3 
// Explanation:


// There are 3 periods with k=1 or fewer distinct values. The number of stable growth periods is 3.

// Example 2:

// Input:  revenues = [2, -3, 2, -3], k = 2
// Output: 10 
// Explanation:


// Any contiguous period of 1 or more days has 2 or fewer distinct values, thus all 10 subarrays represent a period of stable growth 